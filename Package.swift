// swift-tools-version: 5.10
// The swift-tools-version declares the minimum version of Swift required to build this package.

import PackageDescription

let package = Package(
  name: "draco",
  products: [
    .library(
      name: "draco",
      targets: ["draco"]),
  ],
  targets: [
    .target(
      name: "draco",
      exclude: [
        "unity/",
        "tools/",
        "maya/",
        "javascript/",
        "core/vector_d_test.cc",
        "mesh/mesh_splitter_test.cc",
        "mesh/mesh_are_equivalent_test.cc",
        "mesh/triangle_soup_mesh_builder_test.cc",
        "mesh/mesh_cleanup_test.cc",
        "mesh/corner_table_test.cc",
        "mesh/mesh_utils_test.cc",
        "mesh/mesh_features_test.cc",
        "mesh/mesh_test.cc",
        "unity/draco_unity_plugin_test.cc",
        "tools/draco_transcoder_lib_test.cc",
        "point_cloud/point_cloud_test.cc",
        "point_cloud/point_cloud_builder_test.cc",
        "core/draco_test_utils.cc",
        "core/draco_test_base.h",
        "core/math_utils_test.cc",
        "core/vector_d_test.cc",
        "core/draco_test_utils.h",
        "core/buffer_bit_coding_test.cc",
        "core/status_test.cc",
        "core/quantization_utils_test.cc",
        "include/draco/core/draco_test_utils.h",
        "include/draco/io/file_reader_test_common.h",
        "include/draco/io/gltf_test_helper.h",
        "include/draco/compression/config/decoder_options_test.cc",
        "io/gltf_encoder_test.cc",
        "io/stdio_file_reader_test.cc",
        "io/file_writer_utils_test.cc",
        "io/gltf_test_helper.cc",
        "io/point_cloud_io_test.cc",
        "io/obj_encoder_test.cc",
        "io/stl_decoder_test.cc",
        "io/file_reader_test_common.h",
        "io/file_reader_factory_test.cc",
        "io/ply_reader_test.cc",
        "io/stdio_file_writer_test.cc",
        "io/file_utils_test.cc",
        "io/file_writer_factory_test.cc",
        "io/gltf_decoder_test.cc",
        "io/gltf_utils_test.cc",
        "io/scene_io_test.cc",
        "io/texture_io_test.cc",
        "io/stl_encoder_test.cc",
        "io/gltf_test_helper.h",
        "io/obj_decoder_test.cc",
        "io/ply_decoder_test.cc",
        "animation/keyframe_animation_encoding_test.cc",
        "animation/keyframe_animation_test.cc",
        "animation/animation_test.cc",
        "attributes/point_attribute_test.cc",
        "compression/mesh/mesh_edgebreaker_encoding_test.cc",
        "compression/mesh/mesh_encoder_test.cc",
        "compression/encode_test.cc",
        "compression/point_cloud/point_cloud_kd_tree_encoding_test.cc",
        "compression/point_cloud/point_cloud_sequential_encoding_test.cc",
        "compression/config/decoder_options_test.cc",
        "compression/entropy/shannon_entropy_test.cc",
        "compression/entropy/symbol_coding_test.cc",
        "compression/bit_coders/rans_coding_test.cc",
        "compression/attributes/prediction_schemes/prediction_scheme_normal_octahedron_transform_test.cc",
        "compression/attributes/prediction_schemes/prediction_scheme_normal_octahedron_canonicalized_transform_test.cc",
        "compression/attributes/sequential_integer_attribute_encoding_test.cc",
        "compression/attributes/point_d_vector_test.cc",
        "compression/draco_compression_options_test.cc",
        "compression/decode_test.cc",
        "texture/texture_transform_test.cc",
        "texture/texture_map_test.cc",
        "texture/texture_utils_test.cc",
        "texture/texture_library_test.cc",
        "scene/scene_utils_test.cc",
        "scene/scene_test.cc",
        "scene/mesh_group_test.cc",
        "scene/light_test.cc",
        "scene/instance_array_test.cc",
        "scene/scene_are_equivalent_test.cc",
        "scene/trs_matrix_test.cc",
        "metadata/property_table_test.cc",
        "metadata/metadata_test.cc",
        "metadata/structural_metadata_test.cc",
        "metadata/metadata_encoder_test.cc",
        "metadata/property_attribute_test.cc",
        "metadata/structural_metadata_schema_test.cc",
        "material/material_test.cc",
        "material/material_library_test.cc",
        "material/material_utils_test.cc",
      ], sources: [
        "",
      ],
      publicHeadersPath: "public-headers"
    )
  ],
  cxxLanguageStandard: .cxx17
)
